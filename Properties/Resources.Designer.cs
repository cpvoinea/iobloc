//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace iobloc.Properties {
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Iobloc.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ConsoleColor enum value was not defined on that enum. Please use a defined color from the enum..
        /// </summary>
        internal static string Arg_InvalidConsoleColor {
            get {
                return ResourceManager.GetString("Arg_InvalidConsoleColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output byte buffer is too small to contain the encoded data, encoding &apos;{0}&apos; fallback &apos;{1}&apos;..
        /// </summary>
        internal static string Argument_EncodingConversionOverflowBytes {
            get {
                return ResourceManager.GetString("Argument_EncodingConversionOverflowBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output char buffer is too small to contain the decoded characters, encoding &apos;{0}&apos; fallback &apos;{1}&apos;..
        /// </summary>
        internal static string Argument_EncodingConversionOverflowChars {
            get {
                return ResourceManager.GetString("Argument_EncodingConversionOverflowChars", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to String contains invalid Unicode code points..
        /// </summary>
        internal static string Argument_InvalidCharSequenceNoIndex {
            get {
                return ResourceManager.GetString("Argument_InvalidCharSequenceNoIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset and length were out of bounds for the array or count is greater than the number of elements from index to the end of the source collection..
        /// </summary>
        internal static string Argument_InvalidOffLen {
            get {
                return ResourceManager.GetString("Argument_InvalidOffLen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Array cannot be null..
        /// </summary>
        internal static string ArgumentNull_Array {
            get {
                return ResourceManager.GetString("ArgumentNull_Array", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Buffer cannot be null..
        /// </summary>
        internal static string ArgumentNull_Buffer {
            get {
                return ResourceManager.GetString("ArgumentNull_Buffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The frequency must be between {0} and {1}..
        /// </summary>
        internal static string ArgumentOutOfRange_BeepFrequency {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_BeepFrequency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be greater than or equal to zero and less than the console&apos;s buffer size in that dimension..
        /// </summary>
        internal static string ArgumentOutOfRange_ConsoleBufferBoundaries {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_ConsoleBufferBoundaries", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The console buffer size must not be less than the current size and position of the console window, nor greater than or equal to short.MaxValue..
        /// </summary>
        internal static string ArgumentOutOfRange_ConsoleBufferLessThanWindowSize {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_ConsoleBufferLessThanWindowSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Console key values must be between 0 and 255 inclusive..
        /// </summary>
        internal static string ArgumentOutOfRange_ConsoleKey {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_ConsoleKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value must be less than the console&apos;s current maximum window size of {0} in that dimension. Note that this value depends on screen resolution and the console font..
        /// </summary>
        internal static string ArgumentOutOfRange_ConsoleWindowBufferSize {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_ConsoleWindowBufferSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The window position must be set such that the current window size fits within the console&apos;s buffer, and the numbers must not be negative..
        /// </summary>
        internal static string ArgumentOutOfRange_ConsoleWindowPos {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_ConsoleWindowPos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The new console window size would force the console buffer size to be too large..
        /// </summary>
        internal static string ArgumentOutOfRange_ConsoleWindowSize_Size {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_ConsoleWindowSize_Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cursor size is invalid. It must be a percentage between 1 and 100..
        /// </summary>
        internal static string ArgumentOutOfRange_CursorSize {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_CursorSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specified file length was too large for the file system..
        /// </summary>
        internal static string ArgumentOutOfRange_FileLengthTooBig {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_FileLengthTooBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many characters. The resulting number of bytes is larger than what can be returned as an int..
        /// </summary>
        internal static string ArgumentOutOfRange_GetByteCountOverflow {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_GetByteCountOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many bytes. The resulting number of chars is larger than what can be returned as an int..
        /// </summary>
        internal static string ArgumentOutOfRange_GetCharCountOverflow {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_GetCharCountOverflow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index was out of range. Must be non-negative and less than the size of the collection..
        /// </summary>
        internal static string ArgumentOutOfRange_Index {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_Index", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index and count must refer to a location within the string..
        /// </summary>
        internal static string ArgumentOutOfRange_IndexCount {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_IndexCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Index and count must refer to a location within the buffer..
        /// </summary>
        internal static string ArgumentOutOfRange_IndexCountBuffer {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_IndexCountBuffer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Non-negative number required..
        /// </summary>
        internal static string ArgumentOutOfRange_NeedNonNegNum {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_NeedNonNegNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Positive number required..
        /// </summary>
        internal static string ArgumentOutOfRange_NeedPosNum {
            get {
                return ResourceManager.GetString("ArgumentOutOfRange_NeedPosNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Probable I/O race condition detected while copying memory. The I/O package is not thread safe by default. In multithreaded applications, a stream must be accessed in a thread-safe way, such as a thread-safe wrapper returned by TextReader&apos;s or TextWriter&apos;s Synchronized methods. This also applies to classes like StreamWriter and StreamReader..
        /// </summary>
        internal static string IndexOutOfRange_IORaceCondition {
            get {
                return ResourceManager.GetString("IndexOutOfRange_IORaceCondition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot see if a key has been pressed when either application does not have a console or when console input has been redirected from a file. Try Console.In.Peek..
        /// </summary>
        internal static string InvalidOperation_ConsoleKeyAvailableOnFile {
            get {
                return ResourceManager.GetString("InvalidOperation_ConsoleKeyAvailableOnFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot read keys when either application does not have a console or when console input has been redirected. Try Console.Read..
        /// </summary>
        internal static string InvalidOperation_ConsoleReadKeyOnFile {
            get {
                return ResourceManager.GetString("InvalidOperation_ConsoleReadKeyOnFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The printf operation failed..
        /// </summary>
        internal static string InvalidOperation_PrintF {
            get {
                return ResourceManager.GetString("InvalidOperation_PrintF", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create &apos;{0}&apos; because a file or directory with the same name already exists..
        /// </summary>
        internal static string IO_AlreadyExists_Name {
            get {
                return ResourceManager.GetString("IO_AlreadyExists_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; already exists..
        /// </summary>
        internal static string IO_FileExists_Name {
            get {
                return ResourceManager.GetString("IO_FileExists_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find the specified file..
        /// </summary>
        internal static string IO_FileNotFound {
            get {
                return ResourceManager.GetString("IO_FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find file &apos;{0}&apos;..
        /// </summary>
        internal static string IO_FileNotFound_FileName {
            get {
                return ResourceManager.GetString("IO_FileNotFound_FileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no console..
        /// </summary>
        internal static string IO_NoConsole {
            get {
                return ResourceManager.GetString("IO_NoConsole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a part of the path..
        /// </summary>
        internal static string IO_PathNotFound_NoPathName {
            get {
                return ResourceManager.GetString("IO_PathNotFound_NoPathName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find a part of the path &apos;{0}&apos;..
        /// </summary>
        internal static string IO_PathNotFound_Path {
            get {
                return ResourceManager.GetString("IO_PathNotFound_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file name or path is too long, or a component of the specified path is too long..
        /// </summary>
        internal static string IO_PathTooLong {
            get {
                return ResourceManager.GetString("IO_PathTooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The path &apos;{0}&apos; is too long, or a component of the specified path is too long..
        /// </summary>
        internal static string IO_PathTooLong_Path {
            get {
                return ResourceManager.GetString("IO_PathTooLong_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The process cannot access the file &apos;{0}&apos; because it is being used by another process..
        /// </summary>
        internal static string IO_SharingViolation_File {
            get {
                return ResourceManager.GetString("IO_SharingViolation_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The process cannot access the file because it is being used by another process..
        /// </summary>
        internal static string IO_SharingViolation_NoFileName {
            get {
                return ResourceManager.GetString("IO_SharingViolation_NoFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The terminfo database is invalid..
        /// </summary>
        internal static string IO_TermInfoInvalid {
            get {
                return ResourceManager.GetString("IO_TermInfoInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The terminfo database has an invalid magic number: &apos;{0}&apos;..
        /// </summary>
        internal static string IO_TermInfoInvalidMagicNumber {
            get {
                return ResourceManager.GetString("IO_TermInfoInvalidMagicNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream does not support reading..
        /// </summary>
        internal static string NotSupported_UnreadableStream {
            get {
                return ResourceManager.GetString("NotSupported_UnreadableStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream does not support seeking..
        /// </summary>
        internal static string NotSupported_UnseekableStream {
            get {
                return ResourceManager.GetString("NotSupported_UnseekableStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream does not support writing..
        /// </summary>
        internal static string NotSupported_UnwritableStream {
            get {
                return ResourceManager.GetString("NotSupported_UnwritableStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access a closed file..
        /// </summary>
        internal static string ObjectDisposed_FileClosed {
            get {
                return ResourceManager.GetString("ObjectDisposed_FileClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The home directory of the current user could not be determined..
        /// </summary>
        internal static string PersistedFiles_NoHomeDirectory {
            get {
                return ResourceManager.GetString("PersistedFiles_NoHomeDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to the path is denied..
        /// </summary>
        internal static string UnauthorizedAccess_IODenied_NoPathName {
            get {
                return ResourceManager.GetString("UnauthorizedAccess_IODenied_NoPathName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access to the path &apos;{0}&apos; is denied..
        /// </summary>
        internal static string UnauthorizedAccess_IODenied_Path {
            get {
                return ResourceManager.GetString("UnauthorizedAccess_IODenied_Path", resourceCulture);
            }
        }
    }
}
